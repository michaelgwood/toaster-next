language: python
python: "3.5"

sudo: required # We don't actually need sudo but this forces the selection of the trusty beta image
dist: trusty # We have to use trusty for the newer glibc that is needed by geckodriver

addons:
  firefox: "49.0"

cache: pip

git:
  depth: 3

env:
  global:
    - DISPLAY=:99.0
    - PATH=$PATH:$HOME/bin/
  matrix:
    - TARGET=chrome
    - TARGET=firefox
    - TARGET=nonbrowser

install:
  - virtualenv --python=python3 $HOME/virtualenv/
  - virtualenv --python=python2 $HOME/virtualenv/
  - source $HOME/virtualenv/bin/activate
  - pip3 install -r ./bitbake/toaster-requirements.txt
  - pip3 install -r ./bitbake/lib/toaster/tests/toaster-tests-requirements.txt
  - pip3 install flake8
    #- sh -e /etc/init.d/xvfb start
    #  - sleep 3 # give xvfb some time to start
  - mkdir $HOME/bin/
      # - cp $HOME/bin/wires $HOME/bin/geckodriver

before_script:
  #  - firefox --version
  - env
  - "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x16"
    #- geckodriver --help # verify binary runs OK

script:
  - |
    if [ $TARGET == "firefox" ]; then
      wget https://github.com/mozilla/geckodriver/releases/download/v0.11.1/geckodriver-v0.11.1-linux64.tar.gz
      tar -xf geckodriver-v0.11.1-linux64.tar.gz
      mv ./geckodriver $HOME/bin/
      chmod +x $HOME/bin/geckodriver
      TOASTER_TESTS_BROWSER=marionette ./bitbake/lib/toaster/manage.py test tests.browser --failfast
    fi

  - |
    if [ $TARGET == "chrome" ]; then
      sudo apt-get -y purge chromium-browser
      wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
      sudo dpkg -i google-chrome*.deb
      google-chrome --version
      export CHROMEDRIVER_VERSION=`curl -s http://chromedriver.storage.googleapis.com/LATEST_RELEASE`
      curl -L -O "http://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip"
      unzip chromedriver_linux64.zip && chmod +x chromedriver && sudo mv chromedriver /usr/local/bin
      TOASTER_TESTS_BROWSER=chrome ./bitbake/lib/toaster/manage.py test tests.browser --failfast
    fi

  - |
    if [ $TARGET == "nonbrowser" ]; then
      ./bitbake/lib/toaster/manage.py test toastergui
      flake8 ./bitbake/lib/toaster/ --select F --exit-zero # We have too many errors at the moment
    fi
